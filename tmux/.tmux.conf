# remap prefix from 'C-b' to 'C-Space'
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# vi mode
set -g status-keys vi

# split panes using | and -
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# open new window in same folder
bind c new-window -c "#{pane_current_path}"

# send/join panes to/from window
unbind t
unbind f
bind-key f join-pane -s :1
bind-key t new-window -ad -t 0 \; join-pane -t :1 \; select-window -t 0

# stabilize reverse shell with python pty
bind g send-keys "python -c \"import pty;pty.spawn('/bin/bash');\"" C-m

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                          tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                         ($is_fzf && tmux send-keys C-j) || \
                         tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                          ($is_fzf && tmux send-keys C-k)  || \
                          tmux select-pane -U"

bind -n C-l run  "($is_vim && tmux send-keys C-l) || \
                          tmux select-pane -R"

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l
# bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# search in copy mode <prefix> + /
bind-key / copy-mode \; send-key ?

# Use v to trigger selection
bind-key v copy-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Use y to yank current selection
# bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# neovim
set-option -sg escape-time 10
set-option -g focus-events on
set-option -g default-terminal screen-256color

# colors
set-option -g status-style fg=white,bg=black

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1
